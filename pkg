#!/bin/bash

# --------------------------------------------------
# Copyright (c) 2011 Luca Cesari
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of 
# this software and associated documentation files (the "Software"), to deal in 
# the Software without restriction, including without limitation the rights to use, 
# copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the 
# Software, and to permit persons to whom the Software is furnished to do so, 
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all 
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
# PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE 
# FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# --------------------------------------------------

# --------------------------------------------------
# A simple bash script for backup the packege name on a list
#
# Author: Luca Cesari <mirshann@freakmind.org>
# --------------------------------------------------


SCRIPT_PATH=$(readlink -f $0)
SCRIPT_NAME=$(basename $SCRIPT_PATH)
SCRIPT_VERSION='0.1'

AUR_HELPER='packer'
PKG_MANAGER='pacman'

PATTERN=$2
FILE=$2.pkglist

function pkg_restore
{
    local REPO=$(cat $PATTERN | grep -v aur/)
    local AUR=$(cat $PATTERN | grep aur/ | sed 's/aur\///g' )

    echo "Installing Trusted Repositories' packages..."
    echo "Executing command: sudo $PKG_MANAGER -S $REPO"

    sudo $PKG_MANAGER -S $REPO 
    
    echo "Installing AUR packages..."
    echo "Executing command: $AUR_HELPER -S $AUR"

    $AUR_HELPER -S $AUR
}

function pkg_save
{
    echo "Save list of all packege containing $PATTERN..."
    # list all packages installed explicitly but not present in aur
    local REPO=$(comm -23 <($PKG_MANAGER -Qeq) <($PKG_MANAGER -Qmq) | grep $PATTERN)
    local AUR=$($PKG_MANAGER -Qmq | grep $PATTERN)

    for pkg in $REPO
    do
        echo $pkg >> $FILE
    done

    for pkg in $AUR
    do
        echo "aur/$pkg" >> $FILE
    done
}

function pkg_saveall
{
    echo "Save list of all installed packages..."
    FILE="system-$(/bin/date +%Y-%m-%d_%H:%M:%S).pkg"
    # list all packages installed explicitly but not present in aur
    local REPO=$(comm -23 <($PKG_MANAGER -Qeq) <($PKG_MANAGER -Qmq) )
    local AUR=$($PKG_MANAGER -Qmq )

    for pkg in $REPO
    do
        echo $pkg >> $FILE
    done

    for pkg in $AUR
    do
        echo "aur/$pkg" >> $FILE
    done
}

function printversion
{
    echo "$SCRIPT_NAME version $SCRIPT_VERSION"
}

function printhelp 
{
        printversion
        echo "---------------"
        echo ""

        echo "Usage: $SCRIPT_NAME OPTION"
        echo ""
        echo "Accepted options:"
        echo " -sa | --saveall: save all packages"
        echo " -s  | --save PATTERN:  save the packge with the PATTERN"
        echo " -r  | --restore FILE:  restore the package in the input FILE"
        echo " -v  | --version: print version"
        echo " -h  | --help:    print this help"
        echo ""

        echo "---------------"
        echo "Author: Luca Cesari <mirshann@freakmind.org>"

}

case $1 in
     '-sa' | '--saveall' )
         pkg_saveall
         ;;
     '-s' | '--save' )
         pkg_save
         ;;
     '-r' | '--restore' )
         pkg_restore
         ;;
     '-v' | '--version' )
         printversion
         ;;
     '-h' | '--help' )
         printhelp
         ;;
     * )
         printhelp
         ;;
 esac

